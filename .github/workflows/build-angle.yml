name: Build ANGLE

on:
  workflow_dispatch:
    inputs:
      angle-branch:
        description: 'Git branch of ANGLE to build'
        required: true
        default: chromium/6793
      rendering-backend:
        description: 'Rendering backend to build'
        required: true
        type: choice
        options:
          - default
          - d3d9
          - d3d11
          - gl
          - metal
          - vulkan
          - essl
          - glsl
        default: default
      upload-artifacts:
        description: 'Upload build artifacts to S3 storage'
        required: true
        type: boolean
        default: true
      s3-storage-endpoint:
        description: 'URL endpoint of the S3 storage.'
        required: true
        default: 'https://storage.byteplug.io'
      s3-bucket-name:
        description: 'Name of the S3 bucket'
        required: true
        default: 'intjelic'
      s3-path-prefix:
        description: 'Path prefix within the S3 bucket'
        default: '.'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Restore depot tools
        id: cache-depot-tools
        uses: actions/cache@v4
        with:
          path: depot_tools/**
          key: depot-tools-macos

      - name: Install depot tools
        if: steps.cache-depot-tools.outputs.cache-hit != 'true'
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git

      - name: Cache depot tools
        if: steps.cache-depot-tools.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: depot_tools/**
          key: depot-tools-macos

      - name: Restore ANGLE repository
        id: cache-angle
        uses: actions/cache@v4
        with:
          path: angle/**
          key: angle-${{ github.event.inputs['angle-branch'] }}-macos

      - name: Clone ANGLE repository
        if: steps.cache-angle.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: google/angle
          ref: ${{ github.event.inputs['angle-branch'] }}
          path: angle

      - name: Synchronize ANGLE repository
        if: steps.cache-angle.outputs.cache-hit != 'true'
        run: |
          export PATH="${PWD}/depot_tools:${PATH}"
          cd angle
          python scripts/bootstrap.py
          gclient sync

      - name: Cache ANGLE repository
        if: steps.cache-angle.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: angle/**
          key: angle-${{ github.event.inputs['angle-branch'] }}-macos

      - name: Build ANGLE
        run: |
          export PATH="${PWD}/depot_tools:${PATH}"
          cd angle
          gn gen out/Release --args='is_debug=false'
          ninja -j 2 -k1 -C out/Release
